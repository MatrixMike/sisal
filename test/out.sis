DEFINE MAIN
TYPE QUEEN_LIST = ARRAY [INTEGER];
TYPE SOLUTION_LIST = ARRAY [QUEEN_LIST]
FUNCTION IN_CHECK (R,C:INTEGER;QUEENS:QUEEN_LIST RETURNS BOOLEAN)
FOR ROW IN QUEENS AT COLUMN
    RETURNS
    VALUE OF SUM (R = ROW) | ((ROW + COLUMN) = (R + C)) | ((ROW - COLUMN) = (R - C))
  END FOR
END FUNCTION
FUNCTION MAIN (LEVEL:INTEGER RETURNS SOLUTION_LIST)
  IF LEVEL = 1 THEN
FOR ROW IN 1,4
            ASSIGNMENT := ARRAY QUEEN_LIST [1:ROW]
      RETURNS
      ARRAY OF ASSIGNMENT
    END FOR
  ELSE FOR PARTIAL_ASSIGNMENT IN MAIN(LEVEL - 1)
    COLUMN := 1 + ARRAY_SIZE(PARTIAL_ASSIGNMENT);
  NEW_ASSIGNMENT := FOR ROW IN 1,8
        ISCHECK := IN_CHECK(ROW,COLUMN,PARTIAL_ASSIGNMENT);
    ASSIGNMENT :=     IF ISCHECK THEN
ARRAY QUEEN_LIST[]
    ELSE ARRAY_ADDH(PARTIAL_ASSIGNMENT,ROW)
    END IF
    RETURNS
    ARRAY OF ASSIGNMENT UNLESS ISCHECK
  END FOR
  RETURNS
  VALUE OF CATENATE NEW_ASSIGNMENT
END FOR
  END IF
END FUNCTION
